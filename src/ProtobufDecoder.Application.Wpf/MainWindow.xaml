<Window x:Class="ProtobufDecoder.Application.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:protobufDecoder="clr-namespace:ProtobufDecoder;assembly=ProtobufDecoder"
        xmlns:hex="clr-namespace:WpfHexaEditor;assembly=WPFHexaEditor"
        xmlns:viewModels="clr-namespace:ProtobufDecoder.Application.Wpf.ViewModels"
        xmlns:converters="clr-namespace:ProtobufDecoder.Application.Wpf.Converters"
        xmlns:s="clr-namespace:ProtobufDecoder.Application.Wpf"
        mc:Ignorable="d"
        Title="{Binding Path=Model.WindowTitle}"
        Height="600"
        Width="1200"
        Loaded="MainWindow_OnLoaded"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Icon="icon.png">
    <Window.Resources>
        <DataTemplate DataType="{x:Type protobufDecoder:ProtobufTagSingle}">
            <TextBlock Text="{Binding Path=Name}" />
        </DataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type protobufDecoder:ProtobufTagRepeated}"
                                  ItemsSource="{Binding Path=Items,Mode=OneWay}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=Name}" />
                <TextBlock Text="{x:Static s:Strings.TagRepeated}" Margin="4, 0, 0, 0" />
            </StackPanel>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type protobufDecoder:ProtobufTagEmbeddedMessage}"
                                  ItemsSource="{Binding Path=Tags,Mode=OneWay}">
            <TextBlock Text="{Binding Path=Name}" />
        </HierarchicalDataTemplate>
        <converters:ProtobufTagConverter x:Key="ProtobufTagConverter" />
        <converters:ProtobufMessageConverter x:Key="GeneratedProtoConverter" />
        <CollectionViewSource
            x:Key="GroupedViewSource"
            IsLiveGroupingRequested="True"
            Source="{Binding ElementName=TagsTreeView, Path=SelectedItem, Converter={StaticResource ProtobufTagConverter},Mode=OneWay}">
            <CollectionViewSource.LiveGroupingProperties>
                Category
            </CollectionViewSource.LiveGroupingProperties>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <Style TargetType="TextBox" x:Key="GridViewTextBoxStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" d:DataContext="{d:DesignInstance s:ProtobufTagPropertyDescriptor}" Value="True">
                    <DataTrigger.Setters>
                        <Setter Property="BorderThickness" Value="0" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="CheckBox" x:Key="GridViewCheckBoxStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" d:DataContext="{d:DesignInstance s:ProtobufTagPropertyDescriptor}" Value="True">
                    <DataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" d:DataContext="{d:DesignInstance s:ProtobufTagPropertyDescriptor}" Value="False">
                    <DataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=OpenFileCommand}" Key="O" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=SaveGeneratedProtoCommand}" Key="S" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=CopyTagValueCommand}" Key="C" Modifiers="Control" 
                    CommandParameter="{Binding ElementName=TagsTreeView}"/>
        <KeyBinding Command="{Binding Path=DecodeTagCommand}" Key="D" Modifiers="Control" 
                    CommandParameter="{Binding ElementName=TagsTreeView}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" IsMainMenu="True" Margin="0,0,0,0" Height="20">
            <MenuItem Header="{x:Static s:Strings.MenuFile}">
                <MenuItem Header="{x:Static s:Strings.MenuFileOpen}" Name="OpenFileMenuItem" Command="{Binding Path=OpenFileCommand}" InputGestureText="Ctrl+O" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProto}" Name="SaveGeneratedProto"
                          Command="{Binding Path=SaveGeneratedProtoCommand}" InputGestureText="Ctrl+S"/>
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProtoAs}" Name="SaveGeneratedProtoAs"
                              Command="{Binding Path=SaveGeneratedProtoAsCommand}" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileExit}" Name="ExitMenuItem" Click="ExitMenuItem_OnClick" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="{x:Static s:Strings.MenuHelp}">
                <MenuItem Header="{x:Static s:Strings.MenuHelpAbout}" Name="AboutMenuItem" Click="AboutMenuItem_OnClick" />
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal" 
                        Background="{Binding Path=Model.StatusBarBackground,FallbackValue={x:Static Brushes.DodgerBlue}}"
                        DockPanel.Dock="Bottom" 
                        Height="22" 
                        VerticalAlignment="Center" 
                        Margin="0,0,0,0">
            <TextBlock Margin="6,2,0,0" Text="{Binding Path=Model.StatusBarText, FallbackValue={x:Static s:Strings.StatusBarReadyText},TargetNullValue={x:Static s:Strings.StatusBarReadyText}}"
                           Foreground="{Binding Path=Model.StatusBarForeground,FallbackValue={x:Static Brushes.White}}"/>
        </StackPanel>
        <Grid Margin="0,0,0,0"
              HorizontalAlignment="Stretch"
              Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="580" />
                <ColumnDefinition Width="300" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <hex:HexEditor Name="HexEditor"
                           Grid.Column="0"
                           ReadOnlyMode="True"
                           AllowDrop="False"
                           ByteGrouping="EightByte"
                           DefaultCopyToClipboardMode="CSharpCode"
                           Stream="{Binding Path=Model.InputFileByteStream}"
                           AllowCustomBackgroundBlock="True"
                           AllowZoom="False"
                           AllowAutoHighLightSelectionByte="False"
                           Margin="4,0,0,0" />
            <Grid VerticalAlignment="Stretch"
                  Grid.Column="1"
                  Margin="4,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <TreeView x:Name="TagsTreeView"
                          SelectedItemChanged="TagsTreeView_OnSelectedItemChanged"
                          ItemsSource="{Binding Model.Message.Tags,Mode=OneWay}"
                          VerticalAlignment="Stretch"
                          Grid.Row="0">
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static s:Strings.ContextMenuDecodeTag}" x:Name="DecodeTagMenuItem"
                                      Command="{Binding Path=DecodeTagCommand}"
                                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                      InputGestureText="Ctrl+D" />
                            <MenuItem Header="{x:Static s:Strings.ContextMenuCopyValue}" x:Name="CopyValueAsBytes" 
                                      Command="{Binding Path=CopyTagValueCommand}" 
                                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                      InputGestureText="Ctrl+C" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                </TreeView>
                <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrush}}"
                        BorderThickness="0.5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Margin="0,4,0,0"
                        Grid.Row="1">
                    <TextBox x:Name="GeneratedProtoTextBlock"
                             Text="{Binding Model.Message, Converter={StaticResource GeneratedProtoConverter}}"
                             IsReadOnly="True" />
                </Border>
            </Grid>
            <ListView Name="TagPropertiesListBox"
                      ItemsSource="{Binding Source={StaticResource GroupedViewSource}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Margin="4,0,4,0"
                      Grid.Column="2">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridView.Columns>
                            <GridViewColumn Header="{x:Static s:Strings.TagPropertiesName}" Width="80" DisplayMemberBinding="{Binding Path=Name}" />
                            <GridViewColumn Header="{x:Static s:Strings.TagPropertiesValue}">
                                <GridViewColumn.CellTemplateSelector>
                                    <s:PropertyGridViewTemplateSelector>
                                        <s:PropertyGridViewTemplateSelector.String>
                                            <DataTemplate DataType="s:ProtobufTagPropertyDescriptor">
                                                <TextBox Text="{Binding Path=Value}" IsReadOnly="{Binding Path=IsReadOnly}"
                                                         Style="{StaticResource GridViewTextBoxStyle}"/>
                                            </DataTemplate>
                                        </s:PropertyGridViewTemplateSelector.String>

                                        <s:PropertyGridViewTemplateSelector.Boolean>
                                            <DataTemplate DataType="s:ProtobufTagPropertyDescriptor">
                                                <CheckBox IsChecked="{Binding Path=Value}" Style="{StaticResource GridViewCheckBoxStyle}" />
                                            </DataTemplate>
                                        </s:PropertyGridViewTemplateSelector.Boolean>
                                    </s:PropertyGridViewTemplateSelector>
                                </GridViewColumn.CellTemplateSelector>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate DataType="{x:Type s:ProtobufTagPropertyDescriptor}">
                                <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrush}}"
                                        Background="{DynamicResource {x:Static SystemColors.ControlBrush}}"
                                        BorderThickness="1">
                                    <TextBlock FontWeight="Bold" Text="{Binding Path=Name, TargetNullValue={x:Static s:Strings.CommonTagProperties}}" />
                                </Border>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </Grid>
    </DockPanel>
</Window>