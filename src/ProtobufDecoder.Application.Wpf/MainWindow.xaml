<Window x:Class="ProtobufDecoder.Application.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hex="clr-namespace:WpfHexaEditor;assembly=WPFHexaEditor"
        xmlns:viewModels="clr-namespace:ProtobufDecoder.Application.Wpf.ViewModels"
        xmlns:converters="clr-namespace:ProtobufDecoder.Application.Wpf.Converters"
        xmlns:s="clr-namespace:ProtobufDecoder.Application.Wpf"
        xmlns:values="clr-namespace:ProtobufDecoder.Values;assembly=ProtobufDecoder"
        mc:Ignorable="d"
        Title="{Binding Path=Model.WindowTitle}"
        Height="600"
        Width="1200"
        Loaded="MainWindow_OnLoaded"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        Icon="icon.png"
        AllowDrop="True"
        Drop="MainWindow_OnDrop">
    <Window.Resources>
        <converters:ProtobufTagConverter x:Key="ProtobufTagConverter" />
        <converters:ProtobufMessageConverter x:Key="GeneratedProtoConverter" />
        <CollectionViewSource
            x:Key="GroupedViewSource"
            IsLiveGroupingRequested="True"
            Source="{Binding ElementName=TagsTreeView, Path=SelectedItem, Converter={StaticResource ProtobufTagConverter},Mode=OneWay}">
            <CollectionViewSource.LiveGroupingProperties>
                Category
            </CollectionViewSource.LiveGroupingProperties>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <Style TargetType="TextBox" x:Key="GridViewTextBoxStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" Value="True" d:DataContext="{d:DesignInstance converters:ProtobufTagPropertyDescriptor}">
                    <DataTrigger.Setters>
                        <Setter Property="BorderThickness" Value="0" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="CheckBox" x:Key="GridViewCheckBoxStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" Value="True" d:DataContext="{d:DesignInstance converters:ProtobufTagPropertyDescriptor}">
                    <DataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger.Setters>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsReadOnly}" Value="False" d:DataContext="{d:DesignInstance converters:ProtobufTagPropertyDescriptor}">
                    <DataTrigger.Setters>
                        <Setter Property="IsEnabled" Value="True" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding Path=OpenFileCommand}" Key="O" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=SaveGeneratedProtoCommand}" Key="S" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=CopyTagValueCommand}" Key="C" Modifiers="Control"
                    CommandParameter="{Binding ElementName=TagsTreeView}" />
        <KeyBinding Command="{Binding Path=DecodeTagCommand}" Key="D" Modifiers="Control"
                    CommandParameter="{Binding ElementName=TagsTreeView}" />
        <KeyBinding Command="{Binding Path=DecodeAllTagsCommand}" Key="A" Modifiers="Control"
                    CommandParameter="{Binding ElementName=TagsTreeView}" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" IsMainMenu="True" Margin="0,0,0,0" Height="20">
            <MenuItem Header="{x:Static s:Strings.MenuFile}">
                <MenuItem Header="{x:Static s:Strings.MenuFileOpen}" Name="OpenFileMenuItem"
                          Command="{Binding Path=OpenFileCommand}" InputGestureText="Ctrl+O" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProto}" Name="SaveGeneratedProto"
                          Command="{Binding Path=SaveGeneratedProtoCommand}" InputGestureText="Ctrl+S" />
                <MenuItem Header="{x:Static s:Strings.MenuFileSaveGeneratedProtoAs}" Name="SaveGeneratedProtoAs"
                          Command="{Binding Path=SaveGeneratedProtoAsCommand}" />
                <Separator />
                <MenuItem Header="{x:Static s:Strings.MenuFileExit}" Name="ExitMenuItem" Click="ExitMenuItem_OnClick"
                          InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="{x:Static s:Strings.MenuHelp}">
                <MenuItem Header="{x:Static s:Strings.MenuHelpAbout}" Name="AboutMenuItem"
                          Click="AboutMenuItem_OnClick" />
            </MenuItem>
        </Menu>
        <StackPanel Orientation="Horizontal"
                    Background="{Binding Path=Model.StatusBarBackground,FallbackValue={x:Static Brushes.DodgerBlue}}"
                    DockPanel.Dock="Bottom"
                    Height="22"
                    VerticalAlignment="Center"
                    Margin="0,0,0,0">
            <TextBlock Margin="6,2,0,0"
                       Text="{Binding Path=Model.StatusBarText, FallbackValue={x:Static s:Strings.StatusBarReadyText},TargetNullValue={x:Static s:Strings.StatusBarReadyText}}"
                       Foreground="{Binding Path=Model.StatusBarForeground,FallbackValue={x:Static Brushes.White}}" />
        </StackPanel>
        <Grid Margin="0,0,0,0"
              HorizontalAlignment="Stretch"
              Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="580" />
                <ColumnDefinition Width="300" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <hex:HexEditor Name="HexEditor"
                           Grid.Column="0"
                           ReadOnlyMode="True"
                           AllowDrop="False"
                           ByteGrouping="EightByte"
                           DefaultCopyToClipboardMode="CSharpCode"
                           Stream="{Binding Path=Message.InputFileByteStream}"
                           AllowCustomBackgroundBlock="True"
                           AllowZoom="False"
                           AllowAutoHighLightSelectionByte="False"
                           Margin="4,0,0,0"
                           AllowFileDrop="False"/>
            <Grid VerticalAlignment="Stretch"
                  Grid.Column="1"
                  Margin="4,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="4" />
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <TreeView x:Name="TagsTreeView"
                          SelectedItemChanged="TagsTreeView_OnSelectedItemChanged"
                          ItemsSource="{Binding Message.Tags,Mode=OneWay}"
                          VerticalAlignment="Stretch"
                          Grid.Row="0">
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static s:Strings.ContextMenuDecodeTag}"
                                      Command="{Binding Path=DecodeTagCommand}"
                                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                      InputGestureText="Ctrl+D" />
                            <MenuItem Header="{x:Static s:Strings.ContextMenuDecodeAllTags}"
                                      Command="{Binding Path=DecodeAllTagsCommand}"
                                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                      InputGestureText="Ctrl+A" />
                            <MenuItem Header="{x:Static s:Strings.ContextMenuCopyValue}"
                                      Command="{Binding Path=CopyTagValueCommand}"
                                      CommandParameter="{Binding PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                      InputGestureText="Ctrl+C" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Name}" />
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
                <GridSplitter Grid.Row="1"
                              Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                              ShowsPreview="True"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Height="4" />
                <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        BorderThickness="0.5"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Margin="0"
                        Grid.Row="2">
                    <TextBox x:Name="GeneratedProtoTextBlock"
                             Text="{Binding Message.Message, Converter={StaticResource GeneratedProtoConverter},Mode=OneWay}"
                             IsReadOnly="True" />
                </Border>
            </Grid>
            <Grid VerticalAlignment="Stretch"
                  Margin="4,0,4,0"
                  Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="4" />
                    <RowDefinition Height="80" />
                </Grid.RowDefinitions>
                <ListView Name="TagPropertiesListBox"
                          ItemsSource="{Binding Source={StaticResource GroupedViewSource}}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Grid.Row="0"
                          BorderThickness="1,1,1,0"
                          BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridView.Columns>
                                <GridViewColumn Header="{x:Static s:Strings.TagPropertiesName}" Width="90"
                                                DisplayMemberBinding="{Binding Path=Name}" />
                                <GridViewColumn Header="{x:Static s:Strings.TagPropertiesValue}">
                                    <GridViewColumn.CellTemplateSelector>
                                        <s:PropertyGridViewTemplateSelector>
                                            <s:PropertyGridViewTemplateSelector.String>
                                                <DataTemplate DataType="converters:ProtobufTagPropertyDescriptor">
                                                    <TextBox Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                             IsReadOnly="{Binding Path=IsReadOnly}"
                                                             Style="{StaticResource GridViewTextBoxStyle}" />
                                                </DataTemplate>
                                            </s:PropertyGridViewTemplateSelector.String>

                                            <s:PropertyGridViewTemplateSelector.Boolean>
                                                <DataTemplate DataType="converters:ProtobufTagPropertyDescriptor">
                                                    <CheckBox IsChecked="{Binding Path=Value, Mode=OneWay}"
                                                              Style="{StaticResource GridViewCheckBoxStyle}" />
                                                </DataTemplate>
                                            </s:PropertyGridViewTemplateSelector.Boolean>

                                            <s:PropertyGridViewTemplateSelector.PackedFloat>
                                                <DataTemplate DataType="converters:ProtobufTagPropertyDescriptor">
                                                    <!-- Note that the binding path doesn't resolve now but that's because the
                                                    ProtobufTagPropertyDescriptor exposes Value as an object -->
                                                    <ListBox ItemsSource="{Binding Path=Value.Value}" 
                                                             Margin="0,0,4,0"
                                                             HorizontalAlignment="Left"
                                                             Width="140"
                                                             HorizontalContentAlignment="Right" />
                                                </DataTemplate>
                                            </s:PropertyGridViewTemplateSelector.PackedFloat>

                                            <s:PropertyGridViewTemplateSelector.PackedVarint>
                                                <DataTemplate DataType="converters:ProtobufTagPropertyDescriptor">
                                                    <!-- Note that the binding path doesn't resolve now but that's because the
                                                    ProtobufTagPropertyDescriptor exposes Value as an object -->
                                                    <ListBox ItemsSource="{Binding Path=Value.Values}" 
                                                             Margin="0,0,4,0"
                                                             HorizontalAlignment="Left"
                                                             Width="140"
                                                             HorizontalContentAlignment="Right">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate DataType="values:VarintValue">
                                                                <TextBlock Text="{Binding Path=UInt32, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                </DataTemplate>
                                            </s:PropertyGridViewTemplateSelector.PackedVarint>

                                            <s:PropertyGridViewTemplateSelector.Varint>
                                                <DataTemplate DataType="converters:ProtobufTagPropertyDescriptor">
                                                    <Grid DataContext="{Binding Path=Value}"
                                                          d:DataContext="{d:DesignInstance values:VarintValue}">
                                                        <Grid.Resources>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Margin" Value="0,0,0,2"/>
                                                            </Style>
                                                        </Grid.Resources>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="45" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        
                                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Bool" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=Bool, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                        
                                                        <TextBlock Grid.Column="0" Grid.Row="1" Text="UInt16" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding Path=UInt16, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                        
                                                        <TextBlock Grid.Column="0" Grid.Row="2" Text="UInt32" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Path=UInt32, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                        
                                                        <TextBlock Grid.Column="0" Grid.Row="3" Text="UInt64" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding Path=UInt64, Mode=OneWay}" HorizontalAlignment="Stretch" />

                                                        <TextBlock Grid.Column="0" Grid.Row="4" Text="Int16" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding Path=Int16, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                        
                                                        <TextBlock Grid.Column="0" Grid.Row="5" Text="Int32" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="5" Text="{Binding Path=Int32, Mode=OneWay}" HorizontalAlignment="Stretch" />

                                                        <TextBlock Grid.Column="0" Grid.Row="6" Text="Int64" FontWeight="Bold" />
                                                        <TextBlock Grid.Column="1" Grid.Row="6" Text="{Binding Path=Int64, Mode=OneWay}" HorizontalAlignment="Stretch" />
                                                    </Grid>
                                                </DataTemplate>
                                            </s:PropertyGridViewTemplateSelector.Varint>
                                        </s:PropertyGridViewTemplateSelector>
                                    </GridViewColumn.CellTemplateSelector>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate DataType="{x:Type converters:ProtobufTagPropertyDescriptor}">
                                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrush}}"
                                            Background="{DynamicResource {x:Static SystemColors.ControlBrush}}"
                                            BorderThickness="1">
                                        <TextBlock FontWeight="Bold"
                                                   Text="{Binding Path=Name, TargetNullValue={x:Static s:Strings.CommonTagProperties}}" />
                                    </Border>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
                <GridSplitter Grid.Row="1"
                              Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                              ShowsPreview="True"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Height="4"
                              BorderThickness="1,0,1,0"
                              BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                <Border Grid.Row="2"
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        BorderThickness="1,0,1,1"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Margin="0,0,0,0"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <StackPanel Orientation="Vertical"
                                HorizontalAlignment="Stretch"
                                Margin="4,0,0,0"
                                DataContext="{Binding ElementName=TagPropertiesListBox, Path=SelectedItem}"
                                d:DataContext="{d:DesignInstance converters:ProtobufTagPropertyDescriptor}">
                        <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" />
                        <TextBlock Text="{Binding Path=Description}" TextWrapping="Wrap" VerticalAlignment="Stretch"
                                   HorizontalAlignment="Stretch" />
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </DockPanel>
</Window>